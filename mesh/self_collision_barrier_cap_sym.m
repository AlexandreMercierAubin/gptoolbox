function [sf,out2,out3] = self_collision_barrier_cap_sym(in1,tol1)
%SELF_COLLISION_BARRIER_CAP_SYM
%    [SF,OUT2,OUT3] = SELF_COLLISION_BARRIER_CAP_SYM(IN1,TOL1)

%    This function was generated by the Symbolic Math Toolbox version 8.6.
%    17-Apr-2021 23:06:13

X1 = in1(:,1);
X2 = in1(:,2);
X3 = in1(:,3);
X4 = in1(:,4);
t2 = X1.*2.0;
t3 = X2.*2.0;
t4 = X3.*2.0;
t5 = X4.*2.0;
t6 = tol1.^2;
t7 = -X2;
t9 = -X4;
t8 = -t3;
t10 = -t5;
t11 = X1+t7;
t12 = X3+t9;
t13 = t2+t8;
t14 = t4+t10;
t15 = t11.^2;
t16 = t12.^2;
t17 = t13.^2;
t18 = t14.^2;
t19 = t15+t16;
t20 = 1.0./t19.^3;
t21 = 1.0./sqrt(t19);
t22 = t21.^3;
t23 = t21.^5;
t24 = t21.*tol1;
t26 = (t6.*t17.*t20)./2.0;
t27 = (t6.*t18.*t20)./2.0;
t30 = (t6.*t13.*t14.*t20)./2.0;
t25 = t24-1.0;
sf = t25.^2;
if nargout > 1
    t28 = -t26;
    t29 = -t27;
    t31 = -t30;
    t32 = t22.*t25.*tol1.*2.0;
    t34 = t13.*t22.*t25.*tol1;
    t35 = t14.*t22.*t25.*tol1;
    out2 = [-t34;t34;-t35;t35];
end
if nargout > 2
    t36 = t17.*t23.*t25.*tol1.*(3.0./2.0);
    t37 = t18.*t23.*t25.*tol1.*(3.0./2.0);
    t40 = t13.*t14.*t23.*t25.*tol1.*(3.0./2.0);
    t33 = -t32;
    t38 = -t36;
    t39 = -t37;
    t41 = -t40;
    t42 = t30+t40;
    t43 = t31+t41;
    t44 = t26+t33+t36;
    t45 = t27+t33+t37;
    t46 = t28+t32+t38;
    t47 = t29+t32+t39;
    out3 = [t44;t46;t42;t43;t46;t44;t43;t42;t42;t43;t45;t47;t43;t42;t47;t45];
end
